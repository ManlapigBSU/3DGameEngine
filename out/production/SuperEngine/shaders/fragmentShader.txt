#version 150

//input from vertshader
//in vec3 color;
in vec2 pass_textureCoords;
in vec3 surfaceNormal;
in vec3 toLightVector;

out vec4 out_Color;

uniform sampler2D textureSampler;
uniform vec3 lightColor;

void main() {

    //normalize
    vec3 unitNormal = normalize(surfaceNormal);
    vec3 unitLightVector = normalize(toLightVector);

    //compute dot product
    float nDot1 = dot(unitNormal, unitLightVector);
    float brightness = max(nDot1, 0.0);
    vec3 diffuse = brightness * lightColor;

    //takes in texture sample, and the coordinates
    out_Color = vec4 (diffuse, 1.0) * texture(textureSampler, pass_textureCoords);
    //out_Color = vec4(color, 1.0);

}
